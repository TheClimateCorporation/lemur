CHANGES

1.4.5

- Use DefaultAWSCredentialsProviderChain to discover AWS credentials

1.4.4

- EMR instance tags can be specified in cluster configuration

1.4.3

- Fix binary argument passthrough (e.g. "--no-bar")
- Fix some tests

1.4.2

- Hadoop streaming and step-jar selection enabled in local mode

1.4.1

- Project depends on aws-java-sdk 1.8.4
- add job-flow-role service-role as cli options

1.4.0

- Project depends on Clojure version 1.5.1
- Optional profiles can be enabled to use Clojure version 1.3 or 1.4

1.3.1

- Include CHANGES.txt and LICENSE in the tarball distribution

1.3.0

- Allow explicit action-on-failure setting for defstep
- New submit command to add a step to a running jobflow
- Move to lein2

1.2.1

- set the VisibleToAllUsers flag on all jobflows
- update to version 1.3.24 of the Amazon SDK for Java

1.2.0

- s3/cp now supports S3 directory to S3 directory copies

- Support in defcluster for two Amazon features
  - set the hadoop-version with :hadoop-version which takes a string like "0.20.205"
  - set supported-products with :supported-products, e.g.
    (defcluster ...
      :supported-products ["karmasphere-enterprise-utility"])

- In defstep, a value of "nil" should be converted to nil.  This captures the common case
  of :args.foo "${foo}" when :foo is unset.

- New helper function lemur.core/eoval - use this in your defstep args to get the value
  of an option.
  E.g. (defstep ...
          :args.foo (eoval foo))
  This is better than "${foo}" in that it will return the value of :foo without converting
  it into a string.  This is most important for Boolean values, i.e. you want the value true,
  not the string "true".

- Catch this common error and handle it as most people would expect:
  (defstep ...
    :args.foo "${foo}")
  With no entry in (catch-args).  Previously this resulted in a stackoverflow, as it repeatedly
  repeatedly called itself to get the value of "${foo}".  Now, the (catch-args) entry is
  created implicitly with a default of nil.

- bugfix: When there is an explicit catch-args for a boolean option:
    E.g. (catch-args [:foo? "some help"] false)
  defstep would not recognize it, and would instead create a new option, non-boolean option :foo.
  Now, you can create boolean options like this, which work with the catch-args example above:
  (defstep ...
    :args.foo (eoval :foo?))

- fix bootstrap-actions-test/mk-hadoop-config unit test

1.1.1

- Bugfix: :ami-version default should only be set in base.clj, not the command line defaults,
  otherwise it is not over-ridable in a project specific base file.

1.1.0

- fire! accepts a "fn of eopts" which returns the cluster
- fire! accepts a "fn of eopts" for steps, which returns the list of Steps
- Error check for no jobdef
- Better diagnostic messages for diff-test-data

1.0.1

- fix clj1.3 regression for InstanceGroupConfig in emr.clj
- avoid non-fatal FileNotFound error for lein compile when log4j.properties is not available

1.0.0

- Added lein version command
- Include project.clj in tar (makes it easier to debug or play with the lemur code itself)
- Option to set availability-zone

0.9.10-SNAPSHOT

- Clj 1.3 bug in com.climate.services.aws.emr

0.9.8

- Upgrade to Clojure 1.3.0
- documentation updates

0.9.7

- Add LICENSE and copyright notice
- Fix error when uploading 0-byte file to S3
- Add --[no-]show-progress option to enable[disable] ascii upload progress bars
- Look for explicit aws cred in the Environment: LEMUR_AWS_ACCESS_KEY, LEMUR_AWS_SECRET_KEY

0.9.6

Initial
